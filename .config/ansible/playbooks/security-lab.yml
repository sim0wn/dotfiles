---
- name: Setup security tools
  hosts: localhost
  tasks:
    - name: Update repositories
      ansible.builtin.dnf:
        name: "*"
        update_cache: yes
        state: latest
      become: true
    - name: Install packages using dnf
      ansible.builtin.dnf:
        name:
          - aircrack-ng
          - binwalk
          - bzip2-devel
          - chisel
          - dnsenum
          - gmp-devel
          - hashcat
          - hivex
          - hydra
          - libpcap-devel
          - medusa
          - nmap
          - onesixtyone
          - openssl-devel
          - perl-HTML-Parser
          - perl-Net-DNS
          - perl-Net-IP
          - perl-Net-Netmask
          - perl-WWW-Mechanize
          - perl-XML-Writer
          - python3.11
          - python3-argcomplete
          - python3-beautifulsoup4
          - python3-colorlog
          - python3-cx-oracle
          - python3-natlas-libnmap
          - python3-passlib
          - python3-pyasyncore
          - python3-pycryptodomex
          - python3-scapy
          - python3-scrapy
          - python3-termcolor
          - radare2
          - samba-client
          - samba-common-tools
          - tcpdump
          - wafw00f
          - whatweb
          - whois
          - wireshark
          - yasm
          - zlib-ng
          - zlib-ng-devel
          - zlib-ng-compat
          - zlib-ng-compat-devel
      become: true
    - name: Install tools using cargo
      block:
        - name: Define CARGO_HOME
          set_fact:
            GOPATH: "{{ ansible_env.HOME }}/.local/share/cargo"
        - name: Install evtx (Windows Event Log parser)
          ansible.builtin.command:
            cmd: "cargo install evtx"
        - name: Install rustscan
          ansible.builtin.command:
            cmd: "cargo install rustscan"
    - name: Install tools using gem
      block:
        - name: Define Gem environment
          set_fact:
            GEM_HOME: "{{ ansible_env.HOME }}/.local"
        - name: Install evil-winrm
          ansible.builtin.command:
            cmd: "gem install evil-winrm"
        - name: Install wpscan
          ansible.builtin.command:
            cmd: "gem install wpscan"
    - name: Install tools using go
      block:
        - name: Define Go environment
          set_fact:
            GOPATH: "{{ ansible_env.HOME }}/.local/share/go"
        - name: Install ffuf
          ansible.builtin.command:
            cmd: "go install github.com/ffuf/ffuf/v2@latest"
        - name: Install httpx
          ansible.builtin.command:
            cmd: "go install github.com/projectdiscovery/httpx/cmd/httpx@latest" 
        - name: Install interactsh-client
          ansible.builtin.command:
            cmd: "go install github.com/projectdiscovery/interactsh/cmd/interactsh-client@latest"
        - name: Install kerbrute
          ansible.builtin.command:
            cmd: "go install github.com/ropnop/kerbrute@latest"
    - name: Install Python tools using uv
      block:
        - name: Install python3.10
          ansible.builtin.command:
            cmd: "uv python install 3.10"
        - name: Install bloodhound ingestor
          ansible.builtin.command:
            cmd: "uv tool install git+https://github.com/dirkjanm/BloodHound.py@bloodhound-ce"
        - name: Install certipy
          ansible.builtin.command:
            cmd: "uv tool install --with setuptools git+https://github.com/ly4k/Certipy.git"
        - name: Install enum4linux-ng
          ansible.builtin.command:
            cmd: "uv tool install git+https://github.com/cddmp/enum4linux-ng.git"
        - name: Install git-dumper
          ansible.builtin.command:
            cmd: "uv tool install --python 3.10 git+https://github.com/arthaud/git-dumper.git"
        - name: Install impacket
          ansible.builtin.command:
            cmd: "uv tool install --python 3.10 git+https://github.com/fortra/impacket.git"
        - name: Install NetExec
          ansible.builtin.command:
            cmd: "uv tool install --python 3.10 git+https://github.com/Pennyw0rth/NetExec.git"
        - name: Install pywhisker
          ansible.builtin.command:
            cmd: "uv tool install git+https://github.com/ShutdownRepo/pywhisker.git"
        - name: Install regpol
          ansible.builtin.command:
            cmd: "uv tool install git+https://github.com/jtpereyda/regpol.git"
        - name: Install smtp-user-enum
          ansible.builtin.command:
            cmd: "uv tool install git+https://github.com/cytopia/smtp-user-enum.git"
        - name: Install ssh-audit
          ansible.builtin.command:
            cmd: "uv tool install git+https://github.com/jtesta/ssh-audit.git"
        - name: Install theHarvester
          ansible.builtin.command:
            cmd: "uv tool install git+https://github.com/laramies/theHarvester.git"
    - name: Manually install tools
      block:
        - name: Install Caido
          ansible.builtin.shell: | 
            TMP_DIR=$(mktemp -d)
            curl -Ls 'http://api.github.com/repos/caido/caido/releases/latest' | 
              jq -r '.body' | 
              grep -oE '^.+\[Linux x86_64 \(deb\)\]\(.*\)' |
              sed 's/.*(\(.*\))/\1/g' | 
              xargs -I {} curl -Ls --output "${TMP_DIR}/caido.deb" {} && 
              dpkg-deb -x "${TMP_DIR}/caido.deb" "${TMP_DIR}" && 
              for DIR in "opt" "usr"; do 
                cp -r "${TMP_DIR}/${DIR}/" "/${DIR}/" 
              done && 
              dpkg-deb -e "${TMP_DIR}/caido.deb" "${TMP_DIR}/DEBIAN" &&
              "${TMP_DIR}/DEBIAN/postinst"
              rm -rf "${TMP_DIR}"
          become: true
        - name: Install john
          ansible.builtin.shell: |
            git clone 'https://github.com/openwall/john.git' -b bleeding-jumbo ~/.local/src/john
            cd ~/.local/src/john/src
            ./configure
            make -s clean
            make -sj16
        - name: Install Oracle Instant Client
          ansible.builtin.shell: |
            dnf install -y https://download.oracle.com/otn_software/linux/instantclient/oracle-instantclient-basic-linuxx64.rpm
            dnf install -y https://download.oracle.com/otn_software/linux/instantclient/oracle-instantclient-devel-linuxx64.rpm
            dnf install -y https://download.oracle.com/otn_software/linux/instantclient/oracle-instantclient-sqlplus-linuxx64.rpm
          become: true
        - name: Install odat
          ansible.builtin.shell: |
            git clone https://github.com/quentinhardy/odat.git "${HOME}/.local/opt/odat"
            cd "${HOME}/.local/opt/odat"
            git submodule init
            git submodule update
